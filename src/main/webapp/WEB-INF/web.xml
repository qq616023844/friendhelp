<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns="http://java.sun.com/xml/ns/javaee" 
		xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
							http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
		id="WebApp_ID"  version="3.0" >

	<!-- 加载配置文件 -->
	<context-param>
	    <param-name>contextConfigLocation</param-name>  
    	<param-value>classpath*:spring-hibernate.xml</param-value>  
	</context-param>
	
	<!-- 配置spring监听 -->
	<!-- 不知道干啥用 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 配置字符集 --> 
  	<!-- 过滤字符集，放在所有过滤器前面才有效果 --> 
  	<filter>  
  		<filter-name>characterEncodingFilter</filter-name>  
   	    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
    	<init-param>  
       		<param-name>encoding</param-name>  
      		<param-value>UTF-8</param-value>  
   		</init-param>  
    	<init-param>  
        	<param-name>forceEncoding</param-name>  
       	 	<param-value>true</param-value>  
    	</init-param>  
    </filter>  
    <filter-mapping>  
    	<filter-name>characterEncodingFilter</filter-name>  
    	<url-pattern>/*</url-pattern>  
    </filter-mapping>  
    
<!--其中filter-name里的类名可以通过ctrl+shift+T输入HiddenHttpMethodFilter获得
   	 由于浏览器form表单只支持GET与POST请求，而DELETE、PUT等method并不支持,Spring3.0添加了一个过滤器
 	 可以将这些请求转换为标准的http方法,使得支持GET、POST、PUT与DELETE请求,该过滤器为HiddenHttpMethodFilter -->
	<filter>
      	<filter-name>hiddenHttpMethodFilter</filter-name>
    	<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
   	</filter>
	<filter-mapping>
    	<filter-name>hiddenHttpMethodFilter</filter-name>
    	<url-pattern>/*</url-pattern>
  	</filter-mapping>

<!-- 	<servlet-mapping>  
	    <servlet-name>default</servlet-name>  
	    <url-pattern>*.jpg</url-pattern>  
	</servlet-mapping>  
	<servlet-mapping>  
	    <servlet-name>default</servlet-name>  
	    <url-pattern>*.js</url-pattern>  
	</servlet-mapping>  
	<servlet-mapping>  
	    <servlet-name>default</servlet-name>  
	    <url-pattern>*.css</url-pattern>  
	</servlet-mapping>  -->

	<!-- 配置springMVC -->
	<servlet>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>
	

    
  <!-- 配置Session -->  
  <!-- 不知道干啥用 -->
  <filter>  
    <filter-name>openSession</filter-name>  
    <filter-class>org.springframework.orm.hibernate5.support.OpenSessionInViewFilter</filter-class>  
  </filter>  
  <filter-mapping>  
    <filter-name>openSession</filter-name>  
    <url-pattern>/*</url-pattern>  
  </filter-mapping>
    
</web-app> 